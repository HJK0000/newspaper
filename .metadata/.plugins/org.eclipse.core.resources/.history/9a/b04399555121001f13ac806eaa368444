package com.example.restAPI.controller;

import java.util.Map;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api/v1/post-api")
public class PostController {

	// http://localhost:8092/api/v1/post-api/domain
	@PostMapping("/domain") // 약식으로 쓴 것
	// @RequestMapping(value = "/domain", method=RequestMethod.POST) // 정식으로 쓴 것 (너무
	// 길어서 약식으로 씀)
	public String postExample() {

		return "Hello Post Api!";

	}
	
	// http://localhost:8092/api/v1/post-api/member -- 파라미터는 BODY에 적어준다.
	@PostMapping("/member")
	public String postMember(@RequestBody Map<String, Object> postData) {

		StringBuilder sb = new StringBuilder(); // String으로 하면 계속 공간이 만들어지고, StringBuilder는 하나의 StringBuilder 객체에 계속 이어붙여서 쓴다. --> 속도면에서 빠르다.
		postData.entrySet().forEach(map -> {

			sb.append(map.getKey() + " : " + map.getValue() + "\n");

		});

		return sb.toString();

	}
}
